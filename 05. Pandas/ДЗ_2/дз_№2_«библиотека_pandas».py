# -*- coding: utf-8 -*-
"""ДЗ_№2 «Библиотека pandas».ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xR3wFYYcrBUeCc8l9LzgyAA3pSAn7qRo

**ЗАДАНИЕ_1**  
Напишите функцию, которая классифицирует фильмы из материалов занятия по следующим правилам:

*   оценка 2 и меньше - низкий рейтинг
*   оценка 4 и меньше - средний рейтинг
*   оценка 4.5 и 5 - высокий рейтинг. Результат классификации запишите в столбец class
"""

import pandas as pd
ratings_movies = pd.read_csv('ratings.csv', sep=',', encoding='utf-8')
ratings_movies.head(3)


def rating_class(row):
    if row['rating'] <= 2.0:
        return 'низкий рейтинг'
    elif 2.0 < row['rating'] <= 4:
        return 'средний рейтинг'
    elif row['rating'] >= 4.5:
        return 'высокий рейтинг'


ratings_movies['class'] = ratings_movies.apply(rating_class, axis=1)
ratings_movies.head(10)

"""**ЗАДАНИЕ_2**
Нужно написать гео-классификатор, который каждой строке сможет выставить географическую принадлежность
определённому региону. Т. е. если поисковый запрос содержит название города региона, то в столбце ‘region’ пишется
название этого региона. Если поисковый запрос не содержит названия города, то ставим ‘undefined’.

Правила распределения по регионам Центр, Северо-Запад и Дальний Восток:
"""

geo_data = {
    'Центр': ['москва', 'тула', 'ярославль'],
    'Северо-Запад': ['петербург', 'псков', 'мурманск'],
    'Дальний Восток': ['владивосток', 'сахалин', 'хабаровск']
}

import pandas as pd

keywords = pd.read_csv('keywords.csv', sep=',', encoding='utf-8')


def geo_classifier(row_keyword):
    list_keyword = row_keyword.strip().split(' ')
    for key_region, values_city in geo_data.items():
        for word in list_keyword:
            if word in values_city:
                return key_region
            elif word not in values_city:  # СКАЖИТЕ, ПОЧЕМУ ТАКОЙ КОД ВЫДАЕТ НЕСОВСЕМ ПРАВИЛЬНЫЙ РЕЗУЛЬТ?
                return 'undefined'         # Почему находит только 'ЦЕНТР'?


keywords['region'] = keywords['keyword'].apply(geo_classifier)
"""
keywords[(keywords['region'] == 'Центр') | (keywords['region'] == 'Северо-Запад') |
(keywords['region'] == 'Дальний Восток')].head(20)
"""
keywords.head()
keywords[keywords['region'].isin(['Центр', 'Северо-Запад', 'Дальний Восток'])] # Почему находит только 'ЦЕНТР'???????

"""*ЕСЛИ ТАКОЙ КОД, ТО СРАБАТЫВАЕТ КОРРЕКТНО*

"""

# Commented out IPython magic to ensure Python compatibility.
# %%time
# geo_data = {
#     'Центр': ['москва', 'тула', 'ярославль'],
#     'Северо-Запад': ['петербург', 'псков', 'мурманск'],
#     'Дальний Восток': ['владивосток', 'сахалин', 'хабаровск']
# }
# 
# import pandas as pd
# 
# keywords = pd.read_csv('keywords.csv', sep=',', encoding='utf-8')
# 
# 
# def geo_classifier(row_keyword):
#     list_keyword = row_keyword.strip().split(' ')        # БЕЗ ЗАПЯТОЙ - split(' ') НАЙДЕТ ВСЕ СТРОКИ КОТОРЫЕ СОДЕРЖИТ ХОТЯ БЫ ОДНО
#     for word in list_keyword:                            # СЛОВО ИЗ ПЕРЕЧИСЛЕННЫХ ГОРОДОВ
#         for key_region, values_city in geo_data.items(): # Если split(',') НАЙДЕТ СТРОКИ КОТОРЫЕ СОДЕРЖАТ ЕДИНСТВЕННОЕ СЛОВО - ГОРОД
#             if word in values_city:
#                 return key_region
#     return 'undefined'
# 
# 
# keywords['region'] = keywords['keyword'].apply(geo_classifier)
# 
# #keywords.head(10)
# keywords[keywords['region'].isin(['Центр', 'Северо-Запад', 'Дальний Восток'])]

# Commented out IPython magic to ensure Python compatibility.
# %%time
# geo_data = {
#     'Центр': ['москва', 'тула', 'ярославль'],
#     'Северо-Запад': ['петербург', 'псков', 'мурманск'],
#     'Дальний Восток': ['владивосток', 'сахалин', 'хабаровск']
# }
# 
# import pandas as pd
# 
# keywords = pd.read_csv('keywords.csv', sep=',', encoding='utf-8')
# 
# def geo_classifier(row_keyword):
#     for key_region, values_city in geo_data.items():
#         for city in values_city:
#             if city in row_keyword:
#                 return key_region
#     return 'undefined'
# 
# 
# keywords['region'] = keywords['keyword'].apply(geo_classifier)
# 
# #keywords.head(10)
# keywords[keywords['region'].isin(['Центр', 'Северо-Запад', 'Дальний Восток'])]