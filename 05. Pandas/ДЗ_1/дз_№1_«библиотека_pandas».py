# -*- coding: utf-8 -*-
"""ДЗ_№1 «Библиотека pandas».ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g5ayRUxXwec5DPFCSv8p-E5BPpQcrKyF

**ЗАДАНИЕ_1** (*Определите, какому фильму было выставлено больше всего оценок 5.0.*)
"""

import pandas as pd

movies = pd.read_csv('movies.csv', sep=',', encoding='utf-8')
ratings = pd.read_csv('ratings.csv', sep=',', encoding='utf-8')

movies.head()

ratings.head(6)

moviedID_max = ratings[ratings['rating'] == ratings['rating'].max()]  # или == 5.0
movied_max_count = moviedID_max.groupby(['movieId']).count()
movied_max_count_sort = movied_max_count.sort_values(by=['userId'], ascending=False).head()

movies[movies['movieId'] == movied_max_count_sort.index[0]] # Нашёл такое решение.

"""**ЗАДАНИЕ_2** (*посчитайте суммарное потребление стран Прибалтики (Латвия, Литва и Эстония) категорий 4, 12 и 21 за период с 2005 по 2010 год. Не учитывайте в расчётах отрицательные значения quantity.*)"""

power = pd.read_csv('power.csv', sep=',', encoding='utf-8')
transactions = pd.read_csv('transactions.csv', sep=',', encoding='utf-8')
power.head()

power[power['country'].str.contains('ton', case=False)]['country'].unique()

filtr_countrs = power[(power['country'] == 'Latvia') | (power['country'] == 'Lithuania') | (power['country'] == 'Estonia')]
filtr_countrs.head()

filtr_countrs_cat = filtr_countrs[(filtr_countrs['category'] == 4) | (filtr_countrs['category'] == 12) | (filtr_countrs['category'] == 21)]
filtr_countrs_cat.head()

# Года 2005 и 2010 взял включительно
filtr_countrs_cat_year = filtr_countrs_cat[(filtr_countrs_cat['year'] <= 2010) & (filtr_countrs_cat['year'] >= 2005) & (filtr_countrs_cat['quantity'] > 0)]
filtr_countrs_cat_year['year'].unique()

filtr_countrs_cat_year.head()

print(f'Cуммарное потребление стран Прибалтики (Латвия, Литва и Эстония) \nКатегория: 4, 12 и 21 \nЗа период с 2005 по '
      f'2010 год без учёта отрицательных значений - {filtr_countrs_cat_year["quantity"].sum()} КВт')

"""**ЗАДАНИЕ_3**"""

table_f_str=pd.read_html('https://pythonworld.ru/tipy-dannyx-v-python/stroki-funkcii-i-metody-strok.html')[0]
table_f_str.head(20)